import { Typography } from "antd";
const { Title, Paragraph } = Typography;
export const BSParagraph3 = () => {
  const margin = { marginTop: 25 };
  const s = "{";
  const e = "}";
  return (
    <>
      <Title>Система сеток</Title>
      <Paragraph>
        Используйте нашу мощную мобильную сетку flexbox для создания макетов всех форм и размеров. Используется система «12 колонок», 5-ти адаптивных ярусов, препроцессоров Sass и
        предустановленных классов.
      </Paragraph>

      <Title level={2} style={margin}>
        Пример
      </Title>
      <Paragraph>
        Система сетки Bootstrap использует серию контейнеров, строк и столбцов для размещения и выравнивания содержимого. Сетки построены на flexbox и полностью отзывчивы. Ниже
        приведен пример с подробным объяснением того, как работает система сеткок.
      </Paragraph>
      <div style={{ display: "grid", gridTemplateColumns: "1fr 1fr 1fr", marginBottom: 10 }}>
        <div style={{ border: "1px solid #E3E3E3", background: "F8F8F8", padding: 5, borderRadius: 5 }}>Одна из трёх колонок</div>
        <div style={{ border: "1px solid #E3E3E3", background: "F8F8F8", padding: 5, borderRadius: 5 }}>Одна из трёх колонок</div>
        <div style={{ border: "1px solid #E3E3E3", background: "F8F8F8", padding: 5, borderRadius: 5 }}>Одна из трёх колонок</div>
      </div>
      <div className="case">
        <Title level={4}>Пример</Title>
        <p className="case-code">
          <Paragraph>{`<div class="container">`}</Paragraph>
          <Paragraph>{`<div class="row">`}</Paragraph>
          <Paragraph>{`<div class="col-sm">`}</Paragraph>
          <Paragraph>Одна из трёх колонок</Paragraph>
          <Paragraph>{`</div>`}</Paragraph>
          <Paragraph>{`<div class="col-sm">`}</Paragraph>
          <Paragraph>Одна из трёх колонок</Paragraph>
          <Paragraph>{`</div>`}</Paragraph>
          <Paragraph>{`<div class="col-sm">`}</Paragraph>
          <Paragraph>Одна из трёх колонок</Paragraph>
          <Paragraph>{`</div>`}</Paragraph>
          <Paragraph>{`</div>`}</Paragraph>
          <Paragraph>{`</div>`}</Paragraph>
        </p>
      </div>
      <Paragraph>
        В данном примере с помощью наших предустановленных классов сеток были созданы 3 колонки равной ширины для маленьких, средних и больших девайсов. Эти колонки выровнены с
        помощью родительского класса .container.
      </Paragraph>
      <Title level={2} style={margin}>
        Как это устроено
      </Title>
      <Paragraph>Разберём как работает сеточная система:</Paragraph>
      <ul>
        <li>
          Наша сетка поддерживает шесть отзывчивых контрольных точек. Контрольные точки основаны на медиа-запросах min-width, то есть они влияют на эту точку останова и на все те,
          которые находятся над ней (например, .col-sm-4 и применяется к md, lg, xl и xxl). Это означает, что вы можете контролировать размер контейнера и столбцов в каждой
          контрольной точке.
        </li>
        <li>
          Контейнеры располагаются по центру и горизонтально дополняя ваш контент. Используйте .container при адаптивной ширине, .container-fluid для width: 100% на всех экранах и
          устройствах или в адаптивном контейнере (например, .container-md) для сочетания адаптивности и заданной ширины.
        </li>
        <li>
          Строки являются обертками для столбцов. Каждый столбец имеет горизонтальный padding для создания отступов между отдельными колонками. Этот padding нейтрализует строки с
          отрицательной полями для обеспечения визуального выравнивания содержимого в столбцах по левой стороне. Строки также поддерживают классы-модификаторы для равномерного
          распределения размера ширины колонок и изменения отступов вашего контента.
        </li>
        <li>
          Невероятно гибкие столбцы. В каждой строке доступно 12 шаблонных столбцов, что позволяет создавать различные комбинации элементов, которые охватывают любое количество
          столбцов. Так, если вы хотите использовать четыре колонки одной ширины, используйте .col-4. Ширина width задается в процентах, поэтому размер будет всегда одинаковый
        </li>
        <li>
          Отступы также отзывчивы и настраиваемы. Классы отступов между столбцами доступны во всех точках останова, с такими же размерами, как наши классы полей и интервалы
          заполнения. Замените отступы с помощью классов .gx-*, вертикальные отступы с помощью .gy-* или все отступы с классами .g-*. Класс .g-0 также доступен для удаления
          отступов.
        </li>
        <li>
          Большие возможности Sass переменных, карт и миксинов для использования в ситеме сеток. Если вы не хотите использовать предопределенные классы сеток в Bootstrap, то вы
          можете использовать исходники нашей Sass сетки для создания своей собственной с более семантической разметкой. Мы также включили некоторые пользовательские свойства CSS,
          чтобы использовать эти переменные Sass для большей гибкости в ваших проектах.
        </li>
      </ul>
      <Paragraph>Помните об ограничениях и ошибках ошибках flexbox, таких как невозможность использовать некоторые элементы HTML в качестве гибких контейнеров.</Paragraph>
      <Title level={2} style={margin}>
        Параметры сетки
      </Title>
      <Paragraph>
        Система сеткок Bootstrap может адаптироваться ко всем шести контрольным точкам (брейкпойнтам) по умолчанию и любым точкам, которые вы настраиваете. Шесть уровней сетки по
        умолчанию следующие:
      </Paragraph>
      <ul>
        <li>Очень маленький - Extra small (xs)</li>
        <li>Маленький - Small (sm)</li>
        <li>Средний - Medium (md)</li>
        <li>Большой - Large (lg)</li>
        <li>Очень большой - Extra large (xl)</li>
        <li>Огромный - Extra extra large (xxl)</li>
      </ul>
      <Paragraph>
        Как показано выше, каждая из этих контрольных точек имеет свой собственный контейнер, уникальный префикс класса и модификаторы. Вот как определяется сетка на этих
        контрольных точках:
      </Paragraph>
    </>
  );
};
